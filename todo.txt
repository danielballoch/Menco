Web goals for 9/04/2019
* change layout from const to class? and actually incorperate into pages.
    -> comma out old work and try this
    *had trouble
* Do I need to change index page also?
 -> index page to class? class in class? go back and read over classes vs const to figure out a plan to:
    1. get display markdown content in index page 
    2. have layout component over 
    3. figure out what  data: {allMarkdownRemark: { edges } ... etc actually does and requires.
$$$ Just needed to put layout in return section.

Now:
! prioritise core fuctionality first (snip cart)



* get snipcart buy working

* add cart fuctionality?

* style product tem and index page

* get toolbar working

* add styled components or chage styling to get toolbar, side drawer etc working

* get photos working


Web goals for 10/04/2019:
1. Learn more about snipcart and get buy button working on ecom site. est 1hr.
-> updated api key and added required id tag. Kinda working now 11:25 (only took 20m)
    *cart already in use off the bat. but need cart icon 
2. Learn about cart customization and figure out how long to implement. est 30m.
read through snipcart doc for next hour or so
->added cart icon.
->installed gatsby-plugin-snipcart
*need to figure out data-autopop*
https://docs.snipcart.com/getting-started/the-cart
then keep reading. 1:40m then I needed a break. @12:50pm

*need user login and dashboard for user to stop subscriptions (also shows them usefull info)


also today: look at marketing for freelancers and try suss business card.
-> looked at fonts and business card examples (bookmarked), still not 100%.
* Need to brainstorm and make different prototypes, try stuff out.. throw some shit, see what sticks.


Web goals for 11/04/2019:
1.figure out data-autopop from yesterday est 20m
-> items and dashboard showing twice, try delete snip in code and just use gatsby plugin.
$this worked and took 2 seconds :D customer dashboard also working now.
*number of items and total price does not load automatically on other page, come back to this.

2. read through rest of snipcart docs est 40m
-read through first section and found customisation options.. as well as case studies.
 Beautiful case studies! https://snipcart.com/custom-shopping-cart
 -> couldent help myself, I checked out case studies with rest of time.

-> everything can be edited: flexible product options, additional order info, checkout process etc
https://snipcart.com/custom-shopping-cart

Break. Yoga or have a walk. Butt exercise since sitting so long. 9:45 :D
-> put washing out, got air, now im good 10:00 
-> read rest of case study (10m)

3. Read through customization https://snipcart.com/blog/customize-snipcart-v2-shopping-cart est 20m
https://snipcart.com/blog/cart-customization-sass-bem-low-specificity
-> read but dont really understand
https://docs.snipcart.com/getting-started/customization 
this helped a lot (found after looking through other repos)
-> cloned repo but i'm losing focus. time for luch and to do something else for a bit.
11:30am





Web goals 12/04/2019   - 1:30m today, unless I do stuff after. 
**power went out. went shopping. Below is 30m work :/
1.explore customization options for snip cart.
*read docs from yesterday and try and figure it out?
*just get a small idea of what you can do and how then move to #2
-> after reading I think the way it works is I use the template to create a custom
 theme using sass and whatevers in the template.
I then use gulp to build the final file (testing & production/min).
 This saves time as compiling the sass


Web goals 13/04/2019
1. READ THIS AND IMPLEMENT 
https://snipcart.com/blog/gulp-optimize-frontend-workflow  est 30m
*This should be implemented in the snipcart themes application
2. Figure out how theme works (yesterdays research) est 30m
break.
*New snip tem is different than old guide, but I think everything is already done. (30m mark)
-> will keep going for 30m
*yep everything was done.. silly me didnt read https://docs.snipcart.com/getting-started/customization
but hey, I got there :D
*All new gulp tasks listed with descriptions and at least now I understand gulp.

How I should go about using the file?
*Use gulp watch and gulp sync. The created css (constantly being synced while edited)
will be on server and I can access it on my (now synced dev server) via normal link tag,
 or in my case the gatsby-plugin-snipcart options. 
e.g  <link href="http://localhost:3005/themes/base/snipcart.css" rel="stylesheet" />

10m to try it out :D *two terminals, shits getting fancy
I'm on a roll baby, lets put dinner on then do another half! (1:30m in?)
40m while dinners cooking to figure out.
-> browser sync working but not css.
*think I might need 3 servers up. sync, proxy and 
-> changed to 3006 vs 3005 and now it's working 
*setup is 3 terminals:
1. gulp sync --proxy http://localhost:8000/
2. gulp dev
3. gatsby develop

*Changing scss doesnt actually work even though browser refreshes and
 new css file is created (double check). 
 I think it could be because the link to the css file is in gatsby plugin meaning the server would 
 need to be restarted for the new css file to show up? 
 tomorrows work anyway. 

 14/04/2019

goal: figure out yesterdays troubles.
1. Update css and then restart server and see if change works.
2. Test css link in head (seo) instead of plugin.
*Just tested again and it worked without any changes. Maybe it was the order of starting things?
That's not a problem now, lets work on some design.
3. Create design plan for website and figure out goal for practice site?  (est 1hr)

17/04/2019
Finally doing design plan (desktop folder). Last few days I struggled to make a plan and was irrational.
->Formed importent questions for picking design elements, these should be reusable.
->Created fake menswear company, answering questions 
->Created freelance process document to solidify ideas

18/04/2019
Got up and felt great so doing some morning planning before trip.
-> finished freelance process doc (for now).
-> updated designTemplate doc (still more to add around how to pick features?)


19/04/2019
Goals: Font
->ecom designTemplate purpose sections. Then:
1.research selection and testing proccess for design features.
-> First fonts: *writing font choosing process now, almost done. 
*Finish rule 7 and reading articule. est 30m took 15
*Create process document. est 10m maybe a bit more :D
-> this actually took like an hour as I researched similar websites.
Even still I'm not 100%. It seems simple for this scenario of a profesional/classic
website, but there could be a lot more to it. 
*try it out/create template?

2. create selection and testing process/templates based on research.
3. follow through with selection and testing for ecom site.

*start putting time estmates on things again.


5. Functionality fully working.. whatever this means?
 



